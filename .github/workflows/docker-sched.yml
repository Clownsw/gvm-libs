name: "[Scheduled] Build and upload docker images"
on:
  schedule:
    - cron: '0 */3 * * *' # every 2h

jobs:
  upload-testing:
    name: "Upload testing docker images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
        branches: [ main, oldstable, stable ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{matrix.branches}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "Build and push ${{ github.repository }}-${{ matrix.branches }}-${{matrix.compiler}}-testing"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ github.repository }}-${{ matrix.branches }}-${{ matrix.compiler }}-testing
          file: .docker/testing/Dockerfile
          build-args: |
            VERSION=${{ matrix.branches }}
            COMPILER=${{ matrix.compiler }}
  upload-build:
    needs: upload-testing
    name: "Upload build docker images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - gcc
          - clang
        branches: [ main, oldstable, stable ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{matrix.branches}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: echo "Build and push ${{ github.repository }}-${{ matrix.branches }}-${{ matrix.compiler }}-build"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ github.repository }}-${{ matrix.branches }}-${{matrix.compiler}}-build
          file: .docker/build/Dockerfile
          build-args: |
            VERSION=${{ matrix.branches }}
            COMPILER=${{ matrix.compiler }}
  trigger-openvas:
    needs: upload-build
    name: "Trigger docker "
    runs-on: ubuntu-latest
    steps:
      - name: Trigger openvas docker image upload
        run: |
          curl -X POST https://api.github.com/repos/greenbone/openvas-scanner/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u greenbonebot:${{ secrets.GREENBONE_BOT_TOKEN }} \
          --data '{"event_type": "update-images"}'
